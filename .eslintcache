[{"D:\\VisualStudio\\server.js\\server.js\\client\\src\\index.js":"1","D:\\VisualStudio\\server.js\\server.js\\client\\src\\App.js":"2","D:\\VisualStudio\\server.js\\server.js\\client\\src\\reportWebVitals.js":"3","D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\TeamMenu.js":"4","D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\Group.js":"5","D:\\VisualStudio\\server.js\\server.js\\client\\src\\bestiaryData.js":"6","D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\Bestiary.js":"7","D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\BestiaryItem.js":"8","D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\EnemySlider.js":"9","D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\EnemyPage.js":"10"},{"size":500,"mtime":1619852663283,"results":"11","hashOfConfig":"12"},{"size":6647,"mtime":1627613022155,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":491,"mtime":1621644214377,"results":"15","hashOfConfig":"12"},{"size":538,"mtime":1621644817558,"results":"16","hashOfConfig":"12"},{"size":13694,"mtime":1627613163849,"results":"17","hashOfConfig":"12"},{"size":1839,"mtime":1621644271847,"results":"18","hashOfConfig":"12"},{"size":274,"mtime":1621644203112,"results":"19","hashOfConfig":"12"},{"size":2678,"mtime":1621643984408,"results":"20","hashOfConfig":"12"},{"size":3938,"mtime":1621643912273,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pwxv9a",{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\VisualStudio\\server.js\\server.js\\client\\src\\index.js",[],["46","47"],"D:\\VisualStudio\\server.js\\server.js\\client\\src\\App.js",["48","49","50","51","52","53"],"//import logo from './logo.svg';\r\nimport './App.css'\r\nimport './grid.css'\r\nimport TeamMenu from './Components/TeamMenu'\r\nimport Bestiary from './Components/Bestiary'\r\nimport EnemySlider from './Components/EnemySlider'\r\nimport { useState } from 'react'\r\nimport Enemies from './bestiaryData'\r\nimport { Provider } from 'react-redux'\r\n//import './scss/grid.scss';\r\n\r\nfunction App() {\r\n\r\n    const [EnemyList, setEnemyList] = useState(Enemies)\r\n    const [showHomeTeam, setHomeTeam] = useState({\r\n        \"A\": {\r\n            Name: \"A\",\r\n            Enabled: false,\r\n            Enemies: []\r\n        },\r\n        \"B\": {\r\n            Name: \"B\",\r\n            Enabled: false,\r\n            Enemies: []\r\n        },\r\n        \"C\": {\r\n            Name: \"C\",\r\n            Enabled: false,\r\n            Enemies: []\r\n        }\r\n    })\r\n    const [showAwayTeam, setAwayTeam] = useState({\r\n        \"A\": {\r\n            Name: \"A\",\r\n            Enabled: false,\r\n            Enemies: []\r\n        },\r\n        \"B\": {\r\n            Name: \"B\",\r\n            Enabled: false,\r\n            Enemies: []\r\n        },\r\n        \"C\": {\r\n            Name: \"C\",\r\n            Enabled: false,\r\n            Enemies: []\r\n        }\r\n    })\r\n    const [homeRoster, sethomeRoster] = useState(0);\r\n    const [awayRoster, setawayRoster] = useState(0);\r\n    const [entryHeightR, setHeightR] = useState(null);\r\n    const [entryHeightL, setHeightL] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n \r\n\r\n    function addGroupEntry(Enemy, gName, Team) {\r\n\r\n        let Entry = Object.assign({}, Enemy);\r\n\r\n        if (Team === \"Home\") {\r\n            Entry.ID = homeRoster;\r\n            Entry.Team = Team;\r\n            Entry.Group = gName;\r\n            for (const X in showHomeTeam) {\r\n                if (X === gName)\r\n                    setHomeTeam(prev => ({\r\n                        ...prev,\r\n                        [`${X}`]: { ...prev[`${X}`], Enemies: [...prev[`${X}`].Enemies, Entry] }\r\n                    }));\r\n                //console.log(showHomeTeam[`${X}`].Enemies)\r\n            }\r\n            sethomeRoster(homeRoster + 1)\r\n        }\r\n        if (Team === \"Away\") {\r\n            Entry.ID = awayRoster;\r\n            Entry.Team = Team;\r\n            Entry.Group = gName;\r\n            for (const X in showAwayTeam) {\r\n                if (X === gName)\r\n                    setAwayTeam(prev => ({\r\n                        ...prev,\r\n                        [`${X}`]: { ...prev[`${X}`], Enemies: [...prev[`${X}`].Enemies, Entry] }\r\n                    }));\r\n                //console.log(showAwayTeam[`${X}`].Enemies)\r\n            }\r\n            setawayRoster(awayRoster + 1)\r\n        }\r\n    }\r\n\r\n    function removeGroupEntry(Group, ID, Team) {\r\n        \r\n        if (Team === \"Home\")\r\n            for (const X in showHomeTeam)\r\n                if(X===Group) {\r\n                    let N = showHomeTeam[Group].Enemies.filter(E => !Object.values(E).includes(ID));\r\n                \r\n                    setHomeTeam(prev => ({\r\n                        ...prev,\r\n                        [X]: { ...prev[X], Enemies: N }\r\n                    }))}\r\n        \r\n        if (Team === \"Away\")\r\n                for (const X in showAwayTeam)\r\n                    if (X === Group) {\r\n                    let N = showAwayTeam[Group].Enemies.filter(E => !Object.values(E).includes(ID));\r\n                    \r\n                        setAwayTeam(prev => ({\r\n                            ...prev,\r\n                            [X]: { ...prev[X], Enemies: N }\r\n                        }))\r\n                }\r\n        console.log(\"derpo\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className='App-body1'>\r\n                <TeamMenu\r\n                    AddGroup={() => {\r\n                        for (const X in showHomeTeam) {\r\n                            if (!showHomeTeam[`${X}`].Enabled) {\r\n                                setHomeTeam(prevState => ({\r\n                                    ...prevState,\r\n                                    [`${X}`]: { ...prevState[`${X}`], Enabled: true }\r\n                                }));\r\n                                console.log(X);\r\n                                return\r\n                            }\r\n                        }\r\n                    }}\r\n                    Remove={removeGroupEntry}\r\n                    setGroup={showHomeTeam}\r\n                    removeGroup={false}\r\n                />\r\n                <div className=\"dropdownL\" style={{ height: entryHeightL }}>\r\n                    <Bestiary Data={EnemyList} Roster={homeRoster} AddtoGroup={addGroupEntry} cSS='bEntry-primary' Team='Home' Groups={\r\n                            Object.values(showHomeTeam).filter(group => group.Enabled)\r\n                        } />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"GroupSectionA\">\r\n                <h1>GA</h1>\r\n                {Object.values(showHomeTeam).map(E => {\r\n                    if (E.Enabled)\r\n                        return <EnemySlider Group={E} />\r\n                    else return\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"GroupSectionB\">\r\n                <h1>GB</h1>\r\n                {Object.values(showAwayTeam).map(E => {\r\n                    if (E.Enabled)\r\n                        return <EnemySlider Group={E} />\r\n                    else return\r\n                })}\r\n            </div>\r\n\r\n            <div className='App-body2'>\r\n                <TeamMenu\r\n                    AddGroup={() => {\r\n                        for (const X in showAwayTeam) {\r\n                            if (!showAwayTeam[`${X}`].Enabled) {\r\n                                setAwayTeam(prevState => ({\r\n                                    ...prevState,\r\n                                    [`${X}`]: { ...prevState[`${X}`], Enabled: true }\r\n                                }));\r\n                                console.log(X);\r\n                                return\r\n                            }\r\n                        }\r\n                    }}\r\n                    Remove={removeGroupEntry}\r\n                    setGroup={showAwayTeam}\r\n                    removeGroup={false}\r\n                />\r\n                <div className=\"dropdownR\" style={{ height: entryHeightR }}>\r\n                    <Bestiary Data={EnemyList} AddtoGroup={addGroupEntry} Click={() => setOpen(!open)} cSS='bEntry-secondary' Team='Away' Groups={\r\n                        Object.values(showAwayTeam).filter(group => group.Enabled)\r\n                    } />\r\n                </div>\r\n            </div>\r\n            \r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","D:\\VisualStudio\\server.js\\server.js\\client\\src\\reportWebVitals.js",[],"D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\TeamMenu.js",[],"D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\Group.js",["54"],"// JavaScript source code\r\nimport React from 'react'\r\n//import { useState } from 'react'\r\n\r\nconst Group = ({ Enabled, Name, Entries, Remove }) => {\r\n\r\n    if(Enabled)\r\n        return (\r\n            <>\r\n                <h1>{Name}</h1>\r\n                {Entries.map(E => {\r\n                    return <h2><button key={E.ID} onClick={() => Remove(E.Group, E.ID, E.Team)} className=\"remove-entry\">X</button>{E.Name}</h2>\r\n                })}\r\n            </>\r\n        )\r\n    else \r\n        return  <h1></h1>\r\n    }\r\n    \r\nexport default Group","D:\\VisualStudio\\server.js\\server.js\\client\\src\\bestiaryData.js",[],"D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\Bestiary.js",["55"],"// JavaScript source code\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport BItem from './BestiaryItem'\r\n\r\nconst Bestiary = ({ Data, Click, AddtoGroup, cSS, Groups, Team }) => {\r\n\r\n    const [active, setActive] = useState('')\r\n    const [entryHeight, setHeight] = useState(null)\r\n\r\n    function calcHeight(P) {\r\n        const height = P.offsetHeight;\r\n        setHeight(height);\r\n    }\r\n\r\n    //function AGClick(Item, Name, Team) {\r\n    //    AddGroup(Item, Name, Team)\r\n    //}\r\n    \r\n    return (\r\n        Data.map(Item => {\r\n        return (\r\n            <>\r\n                <button className=\"item-button\" onClick={() => { (active === Item.Name) ? setActive('') : setActive(Item.Name) }}>{Item.Name}</button>\r\n                \r\n                <CSSTransition in={active === Item.Name} unmountOnExit timeout={300} classNames={cSS} onEnter={calcHeight} >\r\n                <div >\r\n                    <BItem Data={Item.Flavor} Heading='Flavor: ' />\r\n                    <b >Abilities</b>\r\n                    {Item.Abilities.map(Ability => {\r\n                        return <BItem Data={Ability.Name} />\r\n                    })}\r\n                    <b >Attacks</b>\r\n                    {Item.Attacks.map(Attack => {\r\n                        return <BItem Data={Attack.Name} />\r\n                    })}\r\n\r\n                    <b >Stats</b>\r\n                    <BItem Data={Item.Power} Heading='Power: ' />\r\n                        {Groups.map(G => {\r\n                            return <button onClick={() => AddtoGroup(Item, G.Name, Team) }>Add to Group {G.Name}</button>\r\n                        })}\r\n                        \r\n                </div>\r\n                </CSSTransition>\r\n            </>\r\n        )})\r\n    )\r\n}\r\n    export default Bestiary\r\n    \r\n","D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\BestiaryItem.js",[],"D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\EnemySlider.js",[],"D:\\VisualStudio\\server.js\\server.js\\client\\src\\Components\\EnemyPage.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":9,"column":10,"nodeType":"62","messageId":"63","endLine":9,"endColumn":18},{"ruleId":"60","severity":1,"message":"64","line":14,"column":23,"nodeType":"62","messageId":"63","endLine":14,"endColumn":35},{"ruleId":"60","severity":1,"message":"65","line":51,"column":26,"nodeType":"62","messageId":"63","endLine":51,"endColumn":36},{"ruleId":"60","severity":1,"message":"66","line":52,"column":26,"nodeType":"62","messageId":"63","endLine":52,"endColumn":36},{"ruleId":"67","severity":1,"message":"68","line":147,"column":26,"nodeType":"69","messageId":"70","endLine":147,"endColumn":32},{"ruleId":"67","severity":1,"message":"68","line":156,"column":26,"nodeType":"69","messageId":"70","endLine":156,"endColumn":32},{"ruleId":"71","severity":1,"message":"72","line":17,"column":17,"nodeType":"73","endLine":17,"endColumn":21},{"ruleId":"60","severity":1,"message":"74","line":10,"column":12,"nodeType":"62","messageId":"63","endLine":10,"endColumn":23},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'setEnemyList' is assigned a value but never used.","'setHeightR' is assigned a value but never used.","'setHeightL' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'entryHeight' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]